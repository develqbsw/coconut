package sk.qbsw.integration.mailchimp.client.model.response;

import javax.validation.constraints.NotNull;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;

import io.swagger.annotations.ApiModelProperty;
import sk.qbsw.integration.mailchimp.client.model.BaseEntity;

/**
 * The mailchimp error response body.
 *
 * @author Tomas Lauro
 * 
 * @version 1.17.0
 * @since 1.17.0
 */
public class MailchimpErrorResponseBody extends BaseEntity
{
	/** The Constant serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type. */
	@ApiModelProperty (required = true, value = "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.")
	@NotNull
	private String type;

	/** A short, human-readable summary of the problem type. It shouldn’t change based on the occurrence of the problem, except for purposes of localization. */
	@ApiModelProperty (required = true, value = "A short, human-readable summary of the problem type. It shouldn’t change based on the occurrence of the problem, except for purposes of localization.")
	@NotNull
	private String title;

	/** The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem. */
	@ApiModelProperty (required = true, value = "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.")
	@NotNull
	private String status;

	/** A human-readable explanation specific to this occurrence of the problem. Learn more about errors. */
	@ApiModelProperty (required = true, value = "A human-readable explanation specific to this occurrence of the problem. Learn more about errors.")
	@NotNull
	private String detail;

	/** A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support. */
	@ApiModelProperty (required = true, value = "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.")
	@NotNull
	private String instance;

	/**
	 * Gets the type.
	 *
	 * @return the type
	 */
	public String getType ()
	{
		return type;
	}

	/**
	 * Sets the type.
	 *
	 * @param type the new type
	 */
	public void setType (String type)
	{
		this.type = type;
	}

	/**
	 * Gets the title.
	 *
	 * @return the title
	 */
	public String getTitle ()
	{
		return title;
	}

	/**
	 * Sets the title.
	 *
	 * @param title the new title
	 */
	public void setTitle (String title)
	{
		this.title = title;
	}

	/**
	 * Gets the status.
	 *
	 * @return the status
	 */
	public String getStatus ()
	{
		return status;
	}

	/**
	 * Sets the status.
	 *
	 * @param status the new status
	 */
	public void setStatus (String status)
	{
		this.status = status;
	}

	/**
	 * Gets the detail.
	 *
	 * @return the detail
	 */
	public String getDetail ()
	{
		return detail;
	}

	/**
	 * Sets the detail.
	 *
	 * @param detail the new detail
	 */
	public void setDetail (String detail)
	{
		this.detail = detail;
	}

	/**
	 * Gets the single instance of MailchimpErrorResponseBody.
	 *
	 * @return single instance of MailchimpErrorResponseBody
	 */
	public String getInstance ()
	{
		return instance;
	}

	/**
	 * Sets the instance.
	 *
	 * @param instance the new instance
	 */
	public void setInstance (String instance)
	{
		this.instance = instance;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals (final Object other)
	{
		if (this == other)
		{
			return true;
		}
		if (other == null)
		{
			return false;
		}
		if (!getClass().equals(other.getClass()))
		{
			return false;
		}
		MailchimpErrorResponseBody castOther = (MailchimpErrorResponseBody) other;
		return new EqualsBuilder().append(type, castOther.type).append(title, castOther.title).append(status, castOther.status).append(detail, castOther.detail).append(instance, castOther.instance).isEquals();
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode ()
	{
		return new HashCodeBuilder(-1018233311, -1394208759).append(type).append(title).append(status).append(detail).append(instance).toHashCode();
	}
}
